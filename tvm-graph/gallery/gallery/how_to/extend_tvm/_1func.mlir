module {func @fastwavesuv(%arg0: !stencil.field<?x?x?xf64>, %arg1: !stencil.field<?x?x?xf64>, %arg2: !stencil.field<?x?x?xf64>, %arg3: !stencil.field<?x?x?xf64>, %arg4: !stencil.field<?x?x?xf64>, %arg5: !stencil.field<?x?x?xf64>, %arg6: !stencil.field<?x?x?xf64>, %arg7: !stencil.field<?x?x?xf64>, %arg8: !stencil.field<?x?x?xf64>, %arg9: !stencil.field<?x?x?xf64>, %arg10: !stencil.field<0x?x0xf64>) attributes {stencil.program} {%0 = stencil.cast %arg0([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%1 = stencil.cast %arg1([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%2 = stencil.cast %arg2([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%3 = stencil.cast %arg3([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%4 = stencil.cast %arg4([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%5 = stencil.cast %arg5([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%6 = stencil.cast %arg6([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%7 = stencil.cast %arg7([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%8 = stencil.cast %arg8([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%9 = stencil.cast %arg9([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%10 = stencil.cast %arg10([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<0x?x0xf64>) -> !stencil.field<0x72x0xf64>
%11 = stencil.load %0 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%12 = stencil.load %1 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%13 = stencil.load %2 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%14 = stencil.load %3 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%15 = stencil.load %4 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%16 = stencil.load %5 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%17 = stencil.load %6 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%18 = stencil.load %7 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%19 = stencil.load %10 : (!stencil.field<0x72x0xf64>) -> !stencil.temp<0x?x0xf64>%fuse_0 = stencil.apply (%arg11 = %15 : !stencil.temp<?x?x?xf64>, %arg12 = %16 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
	%var_1 = stencil.access %arg11 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_2 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_3 = stencil.access %arg12 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_4 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_5 = mulf %var_1, %var_3 : f64
	%var_6 = mulf %var_2, %var_4 : f64
	%cst_0 = constant 1.000000e+00 : f64
	%var_7 = subf %cst_0, %var_1 : f64
	%var_8 = subf %cst_0, %var_2 : f64
	%var_9 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_10 = stencil.access %arg12 [0, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_11 = mulf %var_9, %var_7 : f64
	%var_12 = mulf %var_10, %var_8 : f64
	%var_13 = addf %var_5, %var_11 : f64
	%var_14 = addf %var_6, %var_12 : f64
	%var_15 = subf %var_16, %var_14 : f64
	%var_17 = stencil.store_result %var_15 : (f64) -> !stencil.result<f64>
	stencil.return %var_17 : !stencil.result<f64>
}%fuse_1:2 = stencil.apply (%arg11 = %16 : !stencil.temp<?x?x?xf64>, %arg12 = %fuse_0 : !stencil.temp<?x?x?xf64>, %arg13 = %17 : !stencil.temp<?x?x?xf64>) -> (!stencil.temp<?x?x?xf64>, !stencil.temp<?x?x?xf64>) {
	%var_1 = stencil.access %arg11 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_2 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_3 = subf %var_1, %var_2 : f64
	%cst_0 = constant 5.000000e-01 : f64
	%var_4 = stencil.access %arg12 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_5 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_6 = addf %var_4, %var_5 : f64
	%var_7 = mulf %cst_0, %var_6 : f64
	%var_8 = stencil.access %arg13 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_9 = stencil.access %arg13 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_10 = stencil.access %arg13 [1, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_11 = stencil.access %arg13 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_12 = addf %var_8, %var_9 : f64
	%var_13 = addf %var_10, %var_11 : f64
	%var_14 = subf %var_12, %var_13 : f64
	%var_15 = subf %var_8, %var_9 : f64
	%var_16 = subf %var_10, %var_11 : f64
	%var_17 = addf %var_15, %var_16 : f64
	%var_18 = divf %var_14, %var_17 : f64
	%var_19 = mulf %var_7, %var_18 : f64
	%var_20 = addf %var_3, %var_19 : f64
	%var_21 = stencil.access %arg11 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_22 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_23 = subf %var_21, %var_22 : f64
	%cst_1 = constant 5.000000e-01 : f64
	%var_24 = stencil.access %arg12 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_25 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_26 = addf %var_24, %var_25 : f64
	%var_27 = mulf %cst_1, %var_26 : f64
	%var_28 = stencil.access %arg13 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_29 = stencil.access %arg13 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_30 = stencil.access %arg13 [0, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_31 = stencil.access %arg13 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_32 = addf %var_28, %var_29 : f64
	%var_33 = addf %var_30, %var_31 : f64
	%var_34 = subf %var_32, %var_33 : f64
	%var_35 = subf %var_28, %var_29 : f64
	%var_36 = subf %var_30, %var_31 : f64
	%var_37 = addf %var_35, %var_36 : f64
	%var_38 = divf %var_34, %var_37 : f64
	%var_39 = mulf %var_27, %var_38 : f64
	%var_40 = addf %var_23, %var_39 : f64
	%var_41 = stencil.store_result %var_20 : (f64) -> !stencil.result<f64>
	%var_42 = stencil.store_result %var_40 : (f64) -> !stencil.result<f64>
	stencil.return %var_41, %var_42 : !stencil.result<f64>, !stencil.result<f64>
}%25 = stencil.apply (%arg11 = %13 : !stencil.temp<?x?x?xf64>, %arg12 = %14 : !stencil.temp<?x?x?xf64>, %arg13 = %fuse_1#1 : !stencil.temp<?x?x?xf64>, %arg14 = %18 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
	%cst = constant 1.000000e+01 : f64
	%cst_0 = constant 4.8828125E-4 : f64
	%cst_1 = constant 2.000000e+00 : f64
	%var_1 = stencil.access %arg13 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_2 = stencil.access %arg14 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_3 = stencil.access %arg14 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_4 = addf %var_2, %var_3 : f64
	%var_5 = mulf %cst_1, %cst_0 : f64
	%var_6 = divf %var_5, %var_4 : f64
	%var_7 = mulf %var_1, %var_6 : f64
	%var_8 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_9 = subf %var_8, %var_7 : f64
	%var_10 = mulf %cst, %var_9 : f64
	%var_11 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_12 = addf %var_10, %var_11 : f64
	%var_13 = stencil.store_result %var_12 : (f64) -> !stencil.result<f64>
	stencil.return %var_13 : !stencil.result<f64>
}%24 = stencil.apply (%arg11 = %11 : !stencil.temp<?x?x?xf64>, %arg12 = %12 : !stencil.temp<?x?x?xf64>, %arg13 = %fuse_1#0 : !stencil.temp<?x?x?xf64>, %arg14 = %18 : !stencil.temp<?x?x?xf64>, %arg15 = %19 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
	%cst = constant 1.000000e+01 : f64
	%cst_0 = constant 2.000000e+00 : f64
	%var_1 = stencil.access %arg13 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_2 = stencil.access %arg14 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_3 = stencil.access %arg14 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_4 = stencil.access %arg15 [0, 0, 0] : (!stencil.temp<0x?x0xf64>) -> f64
	%var_5 = addf %var_2, %var_3 : f64
	%var_6 = mulf %cst_0, %var_4 : f64
	%var_7 = divf %var_6, %var_5 : f64
	%var_8 = mulf %var_1, %var_7 : f64
	%var_9 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_10 = subf %var_9, %var_8 : f64
	%var_11 = mulf %cst, %var_10 : f64
	%var_12 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
	%var_13 = addf %var_11, %var_12 : f64
	%var_14 = stencil.store_result %var_13 : (f64) -> !stencil.result<f64>
	stencil.return %var_14 : !stencil.result<f64>
}return}
}