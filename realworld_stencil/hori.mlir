module  {
  func @fastwavesuv(%arg0: !stencil.field<?x?x?xf64>, %arg1: !stencil.field<?x?x?xf64>, %arg2: !stencil.field<?x?x?xf64>, %arg3: !stencil.field<?x?x?xf64>, %arg4: !stencil.field<?x?x?xf64>, %arg5: !stencil.field<?x?x?xf64>, %arg6: !stencil.field<?x?x?xf64>, %arg7: !stencil.field<?x?x?xf64>, %arg8: !stencil.field<?x?x?xf64>, %arg9: !stencil.field<?x?x?xf64>, %arg10: !stencil.field<?x?x?xf64>, %arg11: !stencil.field<?x?x?xf64>, %arg12: !stencil.field<?x?x?xf64>, %arg13: !stencil.field<?x?x?xf64>, %arg14: !stencil.field<?x?x?xf64>, %arg15: !stencil.field<?x?x?xf64>, %arg16: !stencil.field<?x?x?xf64>, %arg17: !stencil.field<?x?x?xf64>, %arg18: !stencil.field<?x?x?xf64>, %arg19: !stencil.field<?x?x?xf64>) attributes {stencil.program} {
    %0 = stencil.cast %arg0([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %1 = stencil.cast %arg1([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %2 = stencil.cast %arg2([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %3 = stencil.cast %arg3([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %4 = stencil.cast %arg4([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %5 = stencil.cast %arg5([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %6 = stencil.cast %arg6([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %7 = stencil.cast %arg7([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %8 = stencil.cast %arg8([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %9 = stencil.cast %arg9([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %10 = stencil.cast %arg10([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %11 = stencil.cast %arg11([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %12 = stencil.cast %arg12([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %13 = stencil.cast %arg13([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %14 = stencil.cast %arg14([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %15 = stencil.cast %arg15([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %16 = stencil.cast %arg16([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %17 = stencil.cast %arg17([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %18 = stencil.cast %arg18([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %19 = stencil.cast %arg19([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %20 = stencil.load %0 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %21 = stencil.load %1 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %22 = stencil.load %2 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %23 = stencil.load %3 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %24 = stencil.load %4 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %25 = stencil.load %5 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %26 = stencil.load %6 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %27 = stencil.load %7 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %28 = stencil.load %8 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %29 = stencil.load %9 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %30 = stencil.load %10 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %31 = stencil.load %11 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %32 = stencil.load %12 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %33 = stencil.load %13 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %34 = stencil.apply (%arg20 = %32 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>, %arg23 = %33 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 0.000000e+00 : f64
      %cst_0 = constant 2.000000e+00 : f64
      %46 = stencil.access %arg23 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg21 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg20 [1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg22 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %47, %48 : f64
      %55 = mulf %cst_0, %49 : f64
      %56 = subf %54, %55 : f64
      %57 = subf %51, %49 : f64
      %58 = mulf %50, %57 : f64
      %59 = subf %49, %52 : f64
      %60 = mulf %53, %59 : f64
      %61 = addf %56, %58 : f64
      %62 = subf %61, %60 : f64
      %63 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %64 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %65 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %68 = stencil.access %arg20 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %69 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %70 = addf %63, %64 : f64
      %71 = mulf %cst_0, %65 : f64
      %72 = subf %70, %71 : f64
      %73 = subf %67, %65 : f64
      %74 = mulf %66, %73 : f64
      %75 = subf %65, %68 : f64
      %76 = mulf %69, %75 : f64
      %77 = addf %72, %74 : f64
      %78 = subf %77, %76 : f64
      %79 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %80 = stencil.access %arg20 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = stencil.access %arg21 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg20 [-1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg22 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = addf %79, %80 : f64
      %87 = mulf %cst_0, %81 : f64
      %88 = subf %86, %87 : f64
      %89 = subf %83, %81 : f64
      %90 = mulf %82, %89 : f64
      %91 = subf %81, %84 : f64
      %92 = mulf %85, %91 : f64
      %93 = addf %88, %90 : f64
      %94 = subf %93, %92 : f64
      %95 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %62, %94 : f64
      %98 = mulf %cst_0, %78 : f64
      %99 = subf %97, %98 : f64
      %100 = subf %62, %78 : f64
      %101 = mulf %95, %100 : f64
      %102 = subf %78, %94 : f64
      %103 = mulf %96, %102 : f64
      %104 = addf %99, %101 : f64
      %105 = subf %104, %103 : f64
      %106 = mulf %46, %105 : f64
      %107 = subf %cst, %106 : f64
      %108 = stencil.store_result %107 : (f64) -> !stencil.result<f64>
      stencil.return %108 : !stencil.result<f64>
    }
    %35 = stencil.apply (%arg20 = %32 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>, %arg23 = %33 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 0.000000e+00 : f64
      %cst_0 = constant 2.000000e+00 : f64
      %46 = stencil.access %arg23 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg21 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg20 [1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg22 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %47, %48 : f64
      %55 = mulf %cst_0, %49 : f64
      %56 = subf %54, %55 : f64
      %57 = subf %51, %49 : f64
      %58 = mulf %50, %57 : f64
      %59 = subf %49, %52 : f64
      %60 = mulf %53, %59 : f64
      %61 = addf %56, %58 : f64
      %62 = subf %61, %60 : f64
      %63 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %64 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %65 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %68 = stencil.access %arg20 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %69 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %70 = addf %63, %64 : f64
      %71 = mulf %cst_0, %65 : f64
      %72 = subf %70, %71 : f64
      %73 = subf %67, %65 : f64
      %74 = mulf %66, %73 : f64
      %75 = subf %65, %68 : f64
      %76 = mulf %69, %75 : f64
      %77 = addf %72, %74 : f64
      %78 = subf %77, %76 : f64
      %79 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %80 = stencil.access %arg20 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = stencil.access %arg21 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg20 [-1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg22 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = addf %79, %80 : f64
      %87 = mulf %cst_0, %81 : f64
      %88 = subf %86, %87 : f64
      %89 = subf %83, %81 : f64
      %90 = mulf %82, %89 : f64
      %91 = subf %81, %84 : f64
      %92 = mulf %85, %91 : f64
      %93 = addf %88, %90 : f64
      %94 = subf %93, %92 : f64
      %95 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %62, %94 : f64
      %98 = mulf %cst_0, %78 : f64
      %99 = subf %97, %98 : f64
      %100 = subf %62, %78 : f64
      %101 = mulf %95, %100 : f64
      %102 = subf %78, %94 : f64
      %103 = mulf %96, %102 : f64
      %104 = addf %99, %101 : f64
      %105 = subf %104, %103 : f64
      %106 = mulf %46, %105 : f64
      %107 = subf %cst, %106 : f64
      %108 = stencil.store_result %107 : (f64) -> !stencil.result<f64>
      stencil.return %108 : !stencil.result<f64>
    }
    %36 = stencil.apply (%arg20 = %26 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>, %arg23 = %20 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 0.000000e+00 : f64
      %cst_0 = constant 2.000000e+00 : f64
      %46 = stencil.access %arg23 [-3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [-1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [-3, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg20 [-2, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg21 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [-2, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg20 [-2, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg22 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %47, %48 : f64
      %55 = mulf %cst_0, %49 : f64
      %56 = subf %54, %55 : f64
      %57 = subf %51, %49 : f64
      %58 = mulf %50, %57 : f64
      %59 = subf %49, %52 : f64
      %60 = mulf %53, %59 : f64
      %61 = addf %56, %58 : f64
      %62 = subf %61, %60 : f64
      %63 = stencil.access %arg20 [-2, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %64 = stencil.access %arg20 [-4, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %65 = stencil.access %arg20 [-3, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg21 [-3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg20 [-3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %68 = stencil.access %arg20 [-3, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %69 = stencil.access %arg22 [-3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %70 = addf %63, %64 : f64
      %71 = mulf %cst_0, %65 : f64
      %72 = subf %70, %71 : f64
      %73 = subf %67, %65 : f64
      %74 = mulf %66, %73 : f64
      %75 = subf %65, %68 : f64
      %76 = mulf %69, %75 : f64
      %77 = addf %72, %74 : f64
      %78 = subf %77, %76 : f64
      %79 = stencil.access %arg20 [-3, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %80 = stencil.access %arg20 [-5, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg20 [-4, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = stencil.access %arg21 [-4, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [-4, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg20 [-4, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg22 [-4, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = addf %79, %80 : f64
      %87 = mulf %cst_0, %81 : f64
      %88 = subf %86, %87 : f64
      %89 = subf %83, %81 : f64
      %90 = mulf %82, %89 : f64
      %91 = subf %81, %84 : f64
      %92 = mulf %85, %91 : f64
      %93 = addf %88, %90 : f64
      %94 = subf %93, %92 : f64
      %95 = stencil.access %arg21 [-3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg22 [-3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %62, %94 : f64
      %98 = mulf %cst_0, %78 : f64
      %99 = subf %97, %98 : f64
      %100 = subf %62, %78 : f64
      %101 = mulf %95, %100 : f64
      %102 = subf %78, %94 : f64
      %103 = mulf %96, %102 : f64
      %104 = addf %99, %101 : f64
      %105 = subf %104, %103 : f64
      %106 = mulf %46, %105 : f64
      %107 = subf %cst, %106 : f64
      %108 = stencil.store_result %107 : (f64) -> !stencil.result<f64>
      stencil.return %108 : !stencil.result<f64>
    }
    %37 = stencil.apply (%arg20 = %25 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>, %arg23 = %21 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 0.000000e+00 : f64
      %cst_0 = constant 2.000000e+00 : f64
      %46 = stencil.access %arg23 [0, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [0, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [-2, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg20 [-1, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg21 [1, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [-1, 4, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg20 [-1, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg22 [1, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %47, %48 : f64
      %55 = mulf %cst_0, %49 : f64
      %56 = subf %54, %55 : f64
      %57 = subf %51, %49 : f64
      %58 = mulf %50, %57 : f64
      %59 = subf %49, %52 : f64
      %60 = mulf %53, %59 : f64
      %61 = addf %56, %58 : f64
      %62 = subf %61, %60 : f64
      %63 = stencil.access %arg20 [-1, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %64 = stencil.access %arg20 [-3, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %65 = stencil.access %arg20 [-2, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg21 [0, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg20 [-2, 4, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %68 = stencil.access %arg20 [-2, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %69 = stencil.access %arg22 [0, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %70 = addf %63, %64 : f64
      %71 = mulf %cst_0, %65 : f64
      %72 = subf %70, %71 : f64
      %73 = subf %67, %65 : f64
      %74 = mulf %66, %73 : f64
      %75 = subf %65, %68 : f64
      %76 = mulf %69, %75 : f64
      %77 = addf %72, %74 : f64
      %78 = subf %77, %76 : f64
      %79 = stencil.access %arg20 [-2, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %80 = stencil.access %arg20 [-4, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg20 [-3, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = stencil.access %arg21 [-1, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [-3, 4, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg20 [-3, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg22 [-1, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = addf %79, %80 : f64
      %87 = mulf %cst_0, %81 : f64
      %88 = subf %86, %87 : f64
      %89 = subf %83, %81 : f64
      %90 = mulf %82, %89 : f64
      %91 = subf %81, %84 : f64
      %92 = mulf %85, %91 : f64
      %93 = addf %88, %90 : f64
      %94 = subf %93, %92 : f64
      %95 = stencil.access %arg21 [0, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg22 [0, 3, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %62, %94 : f64
      %98 = mulf %cst_0, %78 : f64
      %99 = subf %97, %98 : f64
      %100 = subf %62, %78 : f64
      %101 = mulf %95, %100 : f64
      %102 = subf %78, %94 : f64
      %103 = mulf %96, %102 : f64
      %104 = addf %99, %101 : f64
      %105 = subf %104, %103 : f64
      %106 = mulf %46, %105 : f64
      %107 = subf %cst, %106 : f64
      %108 = stencil.store_result %107 : (f64) -> !stencil.result<f64>
      stencil.return %108 : !stencil.result<f64>
    }
    %38 = stencil.apply (%arg20 = %23 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>, %arg23 = %21 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 0.000000e+00 : f64
      %cst_0 = constant 2.000000e+00 : f64
      %46 = stencil.access %arg23 [3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [5, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [3, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg20 [4, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg21 [4, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [4, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg20 [4, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg22 [4, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %47, %48 : f64
      %55 = mulf %cst_0, %49 : f64
      %56 = subf %54, %55 : f64
      %57 = subf %51, %49 : f64
      %58 = mulf %50, %57 : f64
      %59 = subf %49, %52 : f64
      %60 = mulf %53, %59 : f64
      %61 = addf %56, %58 : f64
      %62 = subf %61, %60 : f64
      %63 = stencil.access %arg20 [4, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %64 = stencil.access %arg20 [2, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %65 = stencil.access %arg20 [3, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg21 [6, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg20 [3, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %68 = stencil.access %arg20 [3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %69 = stencil.access %arg22 [6, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %70 = addf %63, %64 : f64
      %71 = mulf %cst_0, %65 : f64
      %72 = subf %70, %71 : f64
      %73 = subf %67, %65 : f64
      %74 = mulf %66, %73 : f64
      %75 = subf %65, %68 : f64
      %76 = mulf %69, %75 : f64
      %77 = addf %72, %74 : f64
      %78 = subf %77, %76 : f64
      %79 = stencil.access %arg20 [6, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %80 = stencil.access %arg20 [1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg20 [2, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = stencil.access %arg21 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [2, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg20 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg22 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = addf %79, %80 : f64
      %87 = mulf %cst_0, %81 : f64
      %88 = subf %86, %87 : f64
      %89 = subf %83, %81 : f64
      %90 = mulf %82, %89 : f64
      %91 = subf %81, %84 : f64
      %92 = mulf %85, %91 : f64
      %93 = addf %88, %90 : f64
      %94 = subf %93, %92 : f64
      %95 = stencil.access %arg21 [3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg22 [3, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %62, %94 : f64
      %98 = mulf %cst_0, %78 : f64
      %99 = subf %97, %98 : f64
      %100 = subf %62, %78 : f64
      %101 = mulf %95, %100 : f64
      %102 = subf %78, %94 : f64
      %103 = mulf %96, %102 : f64
      %104 = addf %99, %101 : f64
      %105 = subf %104, %103 : f64
      %106 = mulf %46, %105 : f64
      %107 = subf %cst, %106 : f64
      %108 = stencil.store_result %107 : (f64) -> !stencil.result<f64>
      stencil.return %108 : !stencil.result<f64>
    }
    %39 = stencil.apply (%arg20 = %24 : !stencil.temp<?x?x?xf64>, %arg21 = %30 : !stencil.temp<?x?x?xf64>, %arg22 = %31 : !stencil.temp<?x?x?xf64>, %arg23 = %21 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 0.000000e+00 : f64
      %cst_0 = constant 2.000000e+00 : f64
      %46 = stencil.access %arg23 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg21 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg20 [1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg22 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %47, %48 : f64
      %55 = mulf %cst_0, %49 : f64
      %56 = subf %54, %55 : f64
      %57 = subf %51, %49 : f64
      %58 = mulf %50, %57 : f64
      %59 = subf %49, %52 : f64
      %60 = mulf %53, %59 : f64
      %61 = addf %56, %58 : f64
      %62 = subf %61, %60 : f64
      %63 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %64 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %65 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %68 = stencil.access %arg20 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %69 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %70 = addf %63, %64 : f64
      %71 = mulf %cst_0, %65 : f64
      %72 = subf %70, %71 : f64
      %73 = subf %67, %65 : f64
      %74 = mulf %66, %73 : f64
      %75 = subf %65, %68 : f64
      %76 = mulf %69, %75 : f64
      %77 = addf %72, %74 : f64
      %78 = subf %77, %76 : f64
      %79 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %80 = stencil.access %arg20 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = stencil.access %arg21 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg20 [-1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg22 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = addf %79, %80 : f64
      %87 = mulf %cst_0, %81 : f64
      %88 = subf %86, %87 : f64
      %89 = subf %83, %81 : f64
      %90 = mulf %82, %89 : f64
      %91 = subf %81, %84 : f64
      %92 = mulf %85, %91 : f64
      %93 = addf %88, %90 : f64
      %94 = subf %93, %92 : f64
      %95 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %62, %94 : f64
      %98 = mulf %cst_0, %78 : f64
      %99 = subf %97, %98 : f64
      %100 = subf %62, %78 : f64
      %101 = mulf %95, %100 : f64
      %102 = subf %78, %94 : f64
      %103 = mulf %96, %102 : f64
      %104 = addf %99, %101 : f64
      %105 = subf %104, %103 : f64
      %106 = mulf %46, %105 : f64
      %107 = subf %cst, %106 : f64
      %108 = stencil.store_result %107 : (f64) -> !stencil.result<f64>
      stencil.return %108 : !stencil.result<f64>
    }
    %40 = stencil.apply (%arg20 = %38 : !stencil.temp<?x?x?xf64>, %arg21 = %39 : !stencil.temp<?x?x?xf64>, %arg22 = %27 : !stencil.temp<?x?x?xf64>, %arg23 = %21 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 5.000000e-01 : f64
      %cst_0 = constant 1.000000e+00 : f64
      %cst_1 = constant 4.000000e+02 : f64
      %cst_2 = constant 3.000000e+02 : f64
      %46 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg21 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg21 [1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg22 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = mulf %50, %cst_1 : f64
      %52 = subf %46, %47 : f64
      %53 = mulf %51, %52 : f64
      %54 = subf %48, %49 : f64
      %55 = mulf %cst_2, %54 : f64
      %56 = subf %53, %55 : f64
      %57 = mulf %56, %56 : f64
      %58 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %59 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %60 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %61 = stencil.access %arg21 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %62 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %63 = mulf %62, %cst_1 : f64
      %64 = subf %58, %59 : f64
      %65 = mulf %63, %64 : f64
      %66 = subf %60, %61 : f64
      %67 = mulf %cst_2, %66 : f64
      %68 = subf %65, %67 : f64
      %69 = mulf %68, %68 : f64
      %70 = stencil.access %arg20 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %71 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %72 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %73 = stencil.access %arg21 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %74 = stencil.access %arg22 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %75 = mulf %74, %cst_1 : f64
      %76 = subf %70, %71 : f64
      %77 = mulf %cst_2, %76 : f64
      %78 = subf %72, %73 : f64
      %79 = mulf %75, %78 : f64
      %80 = subf %77, %79 : f64
      %81 = mulf %80, %80 : f64
      %82 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg21 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %87 = mulf %86, %cst_1 : f64
      %88 = subf %82, %83 : f64
      %89 = mulf %cst_2, %88 : f64
      %90 = subf %84, %85 : f64
      %91 = mulf %87, %90 : f64
      %92 = subf %89, %91 : f64
      %93 = mulf %92, %92 : f64
      %94 = stencil.access %arg23 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %95 = addf %57, %69 : f64
      %96 = addf %81, %93 : f64
      %97 = mulf %cst, %95 : f64
      %98 = mulf %cst, %96 : f64
      %99 = addf %97, %98 : f64
      %100 = mulf %cst_0, %99 : f64
      %101 = mulf %cst_0, %94 : f64
      %102 = subf %100, %101 : f64
      %103 = stencil.store_result %102 : (f64) -> !stencil.result<f64>
      stencil.return %103 : !stencil.result<f64>
    }
    %41 = stencil.apply (%arg20 = %38 : !stencil.temp<?x?x?xf64>, %arg21 = %39 : !stencil.temp<?x?x?xf64>, %arg22 = %27 : !stencil.temp<?x?x?xf64>, %arg23 = %22 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 5.000000e-01 : f64
      %cst_0 = constant 1.000000e+00 : f64
      %cst_1 = constant 4.000000e+02 : f64
      %cst_2 = constant 3.000000e+02 : f64
      %46 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg21 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = mulf %50, %cst_1 : f64
      %52 = subf %46, %47 : f64
      %53 = mulf %51, %52 : f64
      %54 = subf %48, %49 : f64
      %55 = mulf %cst_2, %54 : f64
      %56 = subf %53, %55 : f64
      %57 = mulf %56, %56 : f64
      %58 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %59 = stencil.access %arg20 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %60 = stencil.access %arg21 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %61 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %62 = stencil.access %arg22 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %63 = mulf %62, %cst_1 : f64
      %64 = subf %58, %59 : f64
      %65 = mulf %63, %64 : f64
      %66 = subf %60, %61 : f64
      %67 = mulf %cst_2, %66 : f64
      %68 = subf %65, %67 : f64
      %69 = mulf %68, %68 : f64
      %70 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %71 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %72 = stencil.access %arg21 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %73 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %74 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %75 = mulf %74, %cst_1 : f64
      %76 = subf %70, %71 : f64
      %77 = mulf %cst_2, %76 : f64
      %78 = subf %72, %73 : f64
      %79 = mulf %75, %78 : f64
      %80 = subf %77, %79 : f64
      %81 = mulf %80, %80 : f64
      %82 = stencil.access %arg20 [0, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %83 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %84 = stencil.access %arg21 [1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %85 = stencil.access %arg21 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = stencil.access %arg22 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %87 = mulf %86, %cst_1 : f64
      %88 = subf %82, %83 : f64
      %89 = mulf %cst_2, %88 : f64
      %90 = subf %84, %85 : f64
      %91 = mulf %87, %90 : f64
      %92 = subf %89, %91 : f64
      %93 = mulf %92, %92 : f64
      %94 = stencil.access %arg23 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %95 = addf %69, %57 : f64
      %96 = addf %93, %81 : f64
      %97 = mulf %cst, %95 : f64
      %98 = mulf %cst, %96 : f64
      %99 = addf %97, %98 : f64
      %100 = mulf %cst_0, %99 : f64
      %101 = mulf %cst_0, %94 : f64
      %102 = subf %100, %101 : f64
      %103 = stencil.store_result %102 : (f64) -> !stencil.result<f64>
      stencil.return %103 : !stencil.result<f64>
    }
    %42 = stencil.apply (%arg20 = %38 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 2.000000e+00 : f64
      %46 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = addf %46, %47 : f64
      %54 = mulf %cst, %48 : f64
      %55 = subf %53, %54 : f64
      %56 = subf %50, %48 : f64
      %57 = mulf %49, %56 : f64
      %58 = subf %48, %51 : f64
      %59 = mulf %52, %58 : f64
      %60 = addf %55, %57 : f64
      %61 = subf %60, %59 : f64
      %62 = stencil.store_result %61 : (f64) -> !stencil.result<f64>
      stencil.return %62 : !stencil.result<f64>
    }
    %43 = stencil.apply (%arg20 = %38 : !stencil.temp<?x?x?xf64>, %arg21 = %40 : !stencil.temp<?x?x?xf64>, %arg22 = %42 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %46 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = addf %46, %47 : f64
      %50 = addf %48, %49 : f64
      %51 = stencil.store_result %50 : (f64) -> !stencil.result<f64>
      stencil.return %51 : !stencil.result<f64>
    }
    %44 = stencil.apply (%arg20 = %39 : !stencil.temp<?x?x?xf64>, %arg21 = %28 : !stencil.temp<?x?x?xf64>, %arg22 = %29 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %cst = constant 2.000000e+00 : f64
      %46 = stencil.access %arg20 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg20 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %50 = stencil.access %arg20 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg20 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = addf %46, %47 : f64
      %54 = mulf %cst, %48 : f64
      %55 = subf %53, %54 : f64
      %56 = subf %50, %48 : f64
      %57 = mulf %49, %56 : f64
      %58 = subf %48, %51 : f64
      %59 = mulf %52, %58 : f64
      %60 = addf %55, %57 : f64
      %61 = subf %60, %59 : f64
      %62 = stencil.store_result %61 : (f64) -> !stencil.result<f64>
      stencil.return %62 : !stencil.result<f64>
    }
    %45 = stencil.apply (%arg20 = %39 : !stencil.temp<?x?x?xf64>, %arg21 = %41 : !stencil.temp<?x?x?xf64>, %arg22 = %44 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
      %46 = stencil.access %arg20 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = stencil.access %arg21 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %48 = stencil.access %arg22 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %49 = addf %46, %47 : f64
      %50 = addf %48, %49 : f64
      %51 = stencil.store_result %50 : (f64) -> !stencil.result<f64>
      stencil.return %51 : !stencil.result<f64>
    }
    stencil.store %34 to %14([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    stencil.store %35 to %15([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    stencil.store %36 to %16([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    stencil.store %37 to %17([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    stencil.store %43 to %18([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    stencil.store %45 to %19([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    return
  }
}

